<?xml version="1.0" encoding="UTF-8"?>
<!-- Para añadir un DTD de forma interna se debe declarar el <!DOCTYPE>
debajo de la declaración del XML. -->
<!DOCTYPE biblioteca [

<!-- Creamos nuestro primer elemento DTD, "Libro" que pertenece a "Biblioteca",
la sintaxis es <!ELEMENT 'nombre' '(contenido)'>, es por eso que en estoy
declarando que la biblioteca contiene elementos "libro". -->
<!ELEMENT biblioteca (Libro)>

<!-- Sabiendo la sintaxis, sabemos que los "libros" contienen dentro de si
los atributos / elementos "nombre", "editorial" y "fechaPublicacion", así
que quedaria de la siguiente forma: -->
<!ELEMENT libro (nombre*,editorial,fechaPublicacion+)>

<!-- Como dentro de "nombre" ya no existen hijos / sucesores, dentro de
contenido "()" serian los propios datos que contenga el XML, eso se
indica poniendo (#PCDATA) de forma tal que el DTD entienda que sera
información "textual" dentro de la propia etiqueta / atributo: -->
<!ELEMENT nombre (#PCDATA)>

<!-- Sabiendo eso, hacemos lo mismo para editorial. -->
<!ELEMENT editorial (#PCDATA)>

<!-- Sabiendo eso, hacemos lo mismo para fechaPublicacion. -->
<!ELEMENT fechaPublicacion (#PCDATA)>

<!-- Añadimos la existencia del atributo "paginas" del elemento "nombre"
indicando que el tipo de datos que contiene son alfanúmericos, por lo
tanto "cdata". -->
<!ATTLIST nombre paginas CDATA #REQUIRED>

<!-- Añadimos la existencia del atributo "sexo" del elemento "nombre"
indicando que el tipo de datos que contiene son alfanúmericos, por lo
tanto "cdata". -->
<!ATTLIST fechaPublicacion sexo ("Hombre|Mujer")>

<!-- Si quisera permitir que el tipo de "datos" o "valores" de los elementos,
por ejemplo, estuviera vacio usaria "EMPTY en lugar de "#PCDATA" y si en
cambio quisiera que fuera cualquier cosa usaria "ANY", ejemplos:

<!ELEMENT nombre (EMPTY)> "Permite que este vacio, sin valores."
<!ELEMENT nombre (ANY)> "Permite cualquier cosa, vacio o con un valor"-->

<!-- La cardinalidad fue lo ultimo que se explico, se utiliza para indicar la
relación y/o cantidad de elementos, hijos, etc que se espera que tengan los
atributos / elementos y son los siguientes:

"*" indica que puede ser entre "0" y "n", es decir, puede no haber ningúno o varios / muchos.
"+" indica que puede ser entre "1" y "n", es decir, como minimo una vez y maximo varias.
"?" indica que puede ser entre "0" y "1", es decir, está o no, pero no más de una vez.

Sabiendo eso correguimos la declaración de elementos para que tenga sentido,
haciendo que:

libro sea "*" y sus hijos sean "nombre*", "editorial" y "anno+"

El siguiente paso al que se nos introdujo fue al añadir atributos, por ejemplo
aqui añadimos "paginas" como atributo de "nombre", la sintixis para referirse
a los atributos en DTD es:

<!ATTLIST elemento nombre-atributo tipo-atributo>

Siendo nuestro caso un atributo del elemento "nombre" llamado "paginas" que
contiene datos de tipo AlfaNúmerico (que se representa como "CDATA"), por
lo tanto, quedaria así:

<!ATTLIST nombre paginas CDATA>

Además, si yo quiero que sea obligatorio puedo usar la etiqueta "#REQUIRED"
mientras que si deseo que no sea obligatorio puedo utilizar "#IMPLIED", así
tambien se puede utilizar "#FIXED#, mientras que "requerido" espera si o si
algo, el "fijo / fixed" espera siempre algo fijo y no nulo / null, en mi 
caso elegi que fuese obligatorio por lo que la siguiente modificación es

<!ATTLIST nombre paginas CDATA #REQUIRED>

Ahora, agregamos otro atributo, debemos indicar el genero / sexo de
quien publico el libro, indicando las unicas dos opciones validas
que puede contener el atributo dentro de un "()" y separadas las
opciones por un "|", de la siguiente forma: 

<!ATTLIST nombre paginas ("Hombre|Mujer")>

-->
]>

<!-- De aqui para abajo es el XML. -->
<biblioteca>
  <libro>
    <nombre paginas="250">Agustín - El mejor de España</nombre>
    <editorial>Libros Dawnienses</editorial>
    <fechaPublicacion sexo="Hombre">2024</fechaPublicacion>
  </libro>
  <libro>
    <nombre paginas="3">Victor - HomoSapiens y HomoSexual</nombre>
    <editorial>OrgulloLGBT</editorial>
    <fechaPublicacion sexo="Mujer">2024</fechaPublicacion>
  </libro>
</biblioteca>